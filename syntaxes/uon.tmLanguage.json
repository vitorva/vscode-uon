{
	"information_for_contributors": [
		"This file has been converted from https://github.com/microsoft/vscode-uon.tmLanguage/blob/master/uon.tmLanguage",
		"If you want to provide a fix or improvement, please create a pull request against the original repository.",
		"Once accepted there, we are happy to receive an update request."
	],
	"version": "https://github.com/microsoft/vscode-uon.tmLanguage/commit/9bd83f1c252b375e957203f21793316203f61f70",
	"name": "UON",
	"scopeName": "source.uon",
	"patterns": [
		{
			"include": "#root_value"
		},
		{
			"include": "#comments"
		}
	],
	"repository": {
		"json_seq": {
			"begin": "(!seq( *))?\\[",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.json.sequence.begin.uon"
				}
			},
			"end": "\\]",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.json.sequence.end.uon"
				}
			},
			"name": "meta.structure.sequence.uon",
			"patterns": [
				{
					"include": "#json_value"
				},
				{
					"match": ",",
					"name": "punctuation.separator.sequence.uon"
				},
				{
					"match": "[^\\s\\]]",
					"name": "invalid.illegal.expected-sequence-separator.uon"
				}
			]
		},
		"yaml_seq": {
			"match": "(-)(?!\\S)",
			"name": "punctuation.definition.yaml.sequence.item.uon"
		},
		"yaml_map": {
			"match": "(( *)([a-zA-Z])*)(( *):( *))",
			"name": "punctuation.definition.yaml.map.item.uon",
			"captures": {
				"1": {
					"name": "entity.name.tag.uon"
				}
			}
		},
		"json_map": {
			"begin": "(!map( *))?\\{",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.mapping.begin.uon"
				}
			},
			"end": "\\}",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.mapping.end.uon"
				}
			},
			"name": "meta.structure.mapping.uon",
			"patterns": [
				{
					"comment": "the uon object key",
					"include": "#objectkey"
				},
				{
					"comment": "the uon object unquoted key",
					"include": "#unquotedObjectKey"
				},
				{
					"include": "#string_description"
				},
				{
					"include": "#comments"
				},
				{
					"begin": ":",
					"beginCaptures": {
						"0": {
							"name": "punctuation.separator.mapping.key-value.uon"
						}
					},
					"end": "(,)|(?=\\})",
					"endCaptures": {
						"1": {
							"name": "punctuation.separator.mapping.pair.uon"
						}
					},
					"name": "meta.structure.mapping.value.uon",
					"patterns": [
						{
							"comment": "the uon object value",
							"include": "#json_value"
						},
						{
							"match": "[^\\s,]",
							"name": "invalid.illegal.expected-mapping-separator.uon"
						}
					]
				},
				{
					"match": "[^\\s\\}]",
					"name": "invalid.illegal.expected-mapping-separator.uon"
				}
			]
		},
		"schema": {
			"begin": "(!!([a-zA-Z]*))(( *)?:)",
			"beginCaptures": {
				"1": {
					"name": "punctuation.definition.schema.begin.uon"
				}
			},
			"name": "meta.structure.schema.value.uon",
			"patterns": [
				{
					"begin": "!schema",
					"beginCaptures": {
						"0": {
							"name": "TODO.uon"
						}
					},
					"patterns": [
						{
							"begin": "\\(",
							"beginCaptures": {
								"0": {
									"name": "TODO.uon"
								}
							},
							"end": "\\)",
							"endCaptures": {
								"0": {
									"name": "TODO.uon"
								}
							},
							"name": "TODO.uon",
							"patterns": [
								{
									"match": "description|name|uuid",
									"name": "punctuation.definition.str.property.uon"
								}
							]
						},
						{
							"begin": "\\{",
							"beginCaptures": {
								"0": {
									"name": "TODO.uon"
								}
							},
							"end": "\\}",
							"endCaptures": {
								"0": {
									"name": "TODO.uon"
								}
							},
							"name": "TODO.uon",
							"patterns": [
								{
									"comment": "the uon object key",
									"include": "#objectkey"
								},
								{
									"comment": "the uon object unquoted key",
									"include": "#unquotedObjectKey"
								},
								{
									"begin": "\\(",
									"beginCaptures": {
										"0": {
											"name": "test1.uon"
										}
									},
									"end": "\\)",
									"endCaptures": {
										"0": {
											"name": "test3.uon"
										}
									},
									"name": "test2.uon",
									"patterns": [
										{
											"match": "description|optional",
											"name": "punctuation.definition.str.property.uon"
										}
									]
								},
								{
									"include": "#comments"
								},
								{
									"begin": ":",
									"beginCaptures": {
										"0": {
											"name": "punctuation.separator.dictionary.key-value.uon"
										}
									},
									"end": "(,)|(?=\\})",
									"endCaptures": {
										"1": {
											"name": "punctuation.separator.dictionary.pair.uon"
										}
									},
									"name": "meta.structure.dictionary.value.uon",
									"patterns": [
										{
											"comment": "the uon object value",
											"include": "#validationProperties"
										},
										{
											"match": "[^\\s,]",
											"name": "invalid.illegal.expected-dictionary-separator.uon"
										}
									]
								},
								{
									"match": "[^\\s\\}]",
									"name": "invalid.illegal.expected-dictionary-separator.uon"
								}
							]
						}
					]
				},
				{
					"match": "[^\\s\\}]",
					"name": "invalid.illegal.expected-dictionary-separator.uon"
				}
			]
		},
		"number": {
			"match": "(?x)-?(?:0|[1-9]\\d*)(?:(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)?([ ])*(m|k|m|g|kg|s|min|C|K)?" ,
			"captures" : {
				"0" : {
					"name" : "constant.numeric.uon"
				},
				"2" : {
					"name" : "constant.language.uon"
				}
			}
		},
		"objectkey": {
			"begin": "\"",
			"beginCaptures": {
				"0": {
					"name": "entity.name.tag.uon.begin.uon"
				}
			},
			"end": "\"",
			"endCaptures": {
				"0": {
					"name": "entity.name.tag.uon.end.uon"
				}
			},
			"name": "string.uon support.type.property-name.uon",
			"patterns": [
				{
					"include": "#stringcontent"
				}
			]
		},
		"unquotedObjectKey": {
			"match": "[a-zA-Z]",
			"name": "entity.name.tag.uon"
		},
		"quotedString": {
			"begin": "\"",
			"beginCaptures": {
				"1": {
					"name": "string.uon support.type.property-name.uon"
				},
				"2": {
					"name": "string.unquoted.begin.uon"
				}
			},
			"end": "\"",
			"endCaptures": {
				"0": {
					"name": "string.unquoted.end.uon"
				}
			},
			"name": "string.uon",
			"patterns": [
				{
					"include": "#stringcontent"
				}
			]
		},
		"unquotedString": {
			"match": "[a-zA-Z]",
			"name": "string.unquoted.uon"
		},
		"stringcontent": {
			"patterns": [
				{
					"match": "(?x)                # turn on extended mode\n  \\\\                # a literal backslash\n  (?:               # ...followed by...\n    [\"\\\\/bfnrt]     # one of these characters\n    |               # ...or...\n    u               # a u\n    [0-9a-fA-F]{4}) # and four hex digits",
					"name": "constant.character.escape.uon"
				},
				{
					"match": "\\\\.",
					"name": "invalid.illegal.unrecognized-string-escape.uon"
				}
			]
		},
		"scalar": {
			"patterns": [
				{
					"include": "#number"
				},
				{
					"include": "#string_scalar"
				},
				{
					"include": "#quantity"
				},
				{
					"include": "#boolean_scalar"
				},
				{
					"include": "#urlType"
				},
				{
					"include": "#numberType"
				},
				{
					"include": "#string_description"
				},
				{
					"match": "[^\\s\\}]",
					"name": "test"
				}
			]
		},
		"string_description": {
			"begin": "\\(",
			"beginCaptures": {
				"0": {
					"name": "test1.uon"
				}
			},
			"end": "\\)",
			"endCaptures": {
				"0": {
					"name": "test3.uon"
				}
			},
			"name": "test2.uon",
			"patterns": [
				{
					"match": "description|optional",
					"name": "punctuation.definition.str.property.uon"
				}
			]
		},
		"string_scalar": {
			"name": "string_scalar.uon",
			"patterns": [
				{
					"include": "#quotedString"
				},
				{
					"include": "#unquotedString"
				},
				{
					"include": "#strType"
				}
			]
		},
		"boolean_scalar": {
			"name": "boolean_scalar.uon",
			"patterns": [
				{
					"include": "#boolType"
				},
				{
					"include": "#true"
				},
				{
					"include": "#false"
				},
				{
					"include": "#null"
				}
			]
		},
		"strType": {
			"match": "!str",
			"name": "string.uon support.type.property-name.uon"
		},
		"boolType": {
			"match": "!bool",
			"name": "string.uon support.type.property-name.uon"
		},
		"urlType": {
			"match": "!url",
			"name": "string.uon support.type.property-name.uon"
		},
		"numberType": {
			"match": "!float(128|64|32)?|!int(128|64|32)?|!uint(128|64|32)?",
			"name": "string.uon support.type.property-name.uon"
		},
		"quantity": {
			"name": "quantity.uon",
			"patterns": [
				{
					"include": "#length"
				},
				{
					"include": "#mass"
				},
				{
					"include": "#time"
				},
				{
					"include": "#temperature"
				}
			]
		},
		"boolean": {
			"patterns": [
				{
					"include": "#true"
				},
				{
					"include": "#false"
				}
			]
		},
		"true": {
			"match": "true|True",
			"name": "constant.language.uon"
		},
		"false": {
			"match": "false|False",
			"name": "constant.language.uon"
		},
		"null": {
			"match": "null|none|None",
			"name": "constant.language.uon"
		},
		"comments": {
			"begin": "#",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.comment.begin.uon"
				}
			},
			"end": "\\n",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.comment.end.uon"
				}
			},
			"name": "comment.line.number-sign.uon"
		},
		"validationProperties": {
			"patterns": [
				{
					"include": "#stringValidation"
				},
				{
					"include": "#numberValidation"
				},
				{
					"include": "#boolType"
				},
				{
					"include": "#urlType"
				}
			]
		},
		"stringValidation": {
			"begin": "!str",
			"beginCaptures": {
				"0": {
					"name": "xxxxx.uon"
				}
			},
			"patterns": [
				{
					"begin": "\\(",
					"beginCaptures": {
						"0": {
							"name": "what1"
						}
					},
					"end": "\\)",
					"endCaptures": {
						"0": {
							"name": "what2"
						}
					},
					"name": "meta.structure.str.value.uon",
					"patterns": [
						{
							"match": "max|min",
							"name": "punctuation.definition.str.property.uon"
						}
					]
				}
			]
		},
		"numberValidation": {
			"patterns": [
				{
					"include": "#numberType"
				},
				{
					"begin": "\\(",
					"beginCaptures": {
						"0": {
							"name": "test1"
						}
					},
					"end": "\\)",
					"endCaptures": {
						"0": {
							"name": "test2"
						}
					},
					"name": "meta.structure.str.value.uon",
					"patterns": [
						{
							"match": "max|min|quantity",
							"name": "punctuation.definition.str.property.uon"
						}
					]
				}
			]
		},
		"root_value": {
			"patterns": [
				{
					"include": "#json_collection"
				},
				{
					"include": "#yaml_collection"
				},
				{
					"include": "#schema"
				},
				{
					"include": "#scalar"
				}
			]
		},
		"yaml_collection": {
			"patterns": [
				{
					"include": "#yaml_seq"
				},
				{
					"include": "#yaml_map"
				}
			]
		},
		"json_collection": {
			"patterns": [
				{
					"include": "#json_seq"
				},
				{
					"include": "#json_map"
				}
			]
		},
		"json_value": {
			"patterns": [
				{
					"include": "#json_collection"
				},
				{
					"include": "#scalar"
				},
				{
					"include": "#null"
				},
				{
					"include": "#comments"
				}
			]
		}
	}
}